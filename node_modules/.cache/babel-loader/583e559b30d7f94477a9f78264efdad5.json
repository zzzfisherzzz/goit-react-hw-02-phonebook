{"ast":null,"code":"var _jsxFileName = \"/Users/zzzfisherzzz/Desktop/goit-react-hw-02-phonebook/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nconst filterContactsByQuery = (filter, contacts) => {\n  return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n};\n\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      filter: ''\n    };\n\n    this.addContact = contact => {\n      const {\n        name\n      } = contact;\n      const contactsArray = this.state.contacts;\n      const nameExist = contactsArray.find(con => con['name'] === name);\n\n      if (nameExist) {\n        alert(`${name} is already exist`);\n        return;\n      }\n\n      const contactToAdd = { ...contact,\n        id: shortid.generate()\n      };\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd]\n      }));\n    };\n\n    this.deleteNumber = id => {\n      this.setState(state => ({\n        contacts: state.contacts.filter(contact => contact.id !== id)\n      }));\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    const persistedComments = localStorage.getItem('contacts');\n\n    if (persistedComments) {\n      this.setState({\n        contacts: JSON.parse(persistedComments)\n      });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const filteredContacts = filterContactsByQuery(filter, contacts);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Phonebook\"), /*#__PURE__*/React.createElement(ContactForm, {\n      onAddContact: this.addContact,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Contacts\"), contacts.length >= 2 && /*#__PURE__*/React.createElement(Filter, {\n      value: filter,\n      onChangeFilter: this.changeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), contacts.length > 0 && /*#__PURE__*/React.createElement(ContactList, {\n      items: filteredContacts,\n      onDeleteNumber: this.deleteNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/zzzfisherzzz/Desktop/goit-react-hw-02-phonebook/src/components/App.js"],"names":["React","Component","shortid","ContactForm","ContactList","Filter","filterContactsByQuery","filter","contacts","contact","name","toLowerCase","includes","App","state","addContact","contactsArray","nameExist","find","con","alert","contactToAdd","id","generate","setState","deleteNumber","changeFilter","e","target","value","componentDidMount","persistedComments","localStorage","getItem","JSON","parse","componentDidUpdate","prevState","prevProps","setItem","stringify","render","filteredContacts","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport shortid from 'shortid';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\n\nconst filterContactsByQuery = (filter, contacts) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedComments = localStorage.getItem('contacts');\n\n    if (persistedComments) {\n      this.setState({ contacts: JSON.parse(persistedComments) });\n    }\n  }\n\n  componentDidUpdate(prevState, prevProps) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = contact => {\n    const { name } = contact;\n    const contactsArray = this.state.contacts;\n    const nameExist   = contactsArray.find(con => con['name'] === name);\n    if (nameExist) {\n      alert(`${name} is already exist`);\n      return;\n    }\n\n    const contactToAdd = {\n      ...contact,\n      id: shortid.generate(),\n    };\n\n    this.setState(state => ({\n      contacts: [...state.contacts, contactToAdd],\n    }));\n  };\n\n  deleteNumber = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContactsByQuery(filter, contacts);\n\n    return (\n      <div className=\"wrap\">\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {contacts.length >= 2 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {contacts.length > 0 && (\n          <ContactList\n            items={filteredContacts}\n            onDeleteNumber={this.deleteNumber}\n          />\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}